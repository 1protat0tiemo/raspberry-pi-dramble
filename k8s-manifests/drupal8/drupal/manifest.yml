# Drupal 8 ConfigMap.
apiVersion: v1
kind: ConfigMap
metadata:
  name: drupal8-config
  namespace: {{ manifest_namespace }}
data:
  DRUPAL_DATABASE_HOST: 'mysql'
  DRUPAL_DATABASE_PORT: '3306'
  DRUPAL_DATABASE_NAME: 'drupal'
  DRUPAL_DATABASE_USERNAME: 'drupal'
  DRUPAL_HASH_SALT: '{{ drupal8_hash_salt }}'

# PersistentVolumeClaim for Drupal 8 files.
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: drupal8-files-pvc
  namespace: {{ manifest_namespace }}
  labels:
    app: drupal8
  annotations:
    volume.beta.kubernetes.io/storage-class: "pidramble-nfs"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi

# Drupal 8 Deployment definition.
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drupal8
  namespace: {{ manifest_namespace }}
  labels:
    app: drupal8
spec:
  replicas: 2
  selector:
    matchLabels:
      app: drupal8
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drupal8
        tier: frontend
    spec:
      containers:
        - image: {{ drupal8_docker_image }}
          imagePullPolicy: Always
          name: drupal8
          envFrom:
          - configMapRef:
              name: drupal8-config
          env:
            - name: DRUPAL_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: drupal8-mysql-pass
          ports:
            - containerPort: 80
              name: drupal8
          volumeMounts:
            - mountPath: /var/www/html/sites/default/files
              name: drupal8-files
          resources:
            limits:
              cpu: '1'
              memory: '512Mi'
            requests:
              cpu: '500m'
              memory: '256Mi'
      volumes:
        - name: drupal8-files
          persistentVolumeClaim:
            claimName: drupal8-files-pvc

# Drupal 8 Service definition.
---
apiVersion: v1
kind: Service
metadata:
  name: drupal8
  namespace: {{ manifest_namespace }}
  labels:
    app: drupal8
spec:
  ports:
    - port: 80
  selector:
    app: drupal8
    tier: frontend
  type: NodePort

# Drupal 8 Ingress.
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: drupal8-ingress
  namespace: {{ manifest_namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: {{ drupal8_domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: drupal8
          servicePort: 80

# Drupal 8 Horizontal Pod Autoscaler.
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: drupal8
  namespace: {{ manifest_namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: drupal8
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
