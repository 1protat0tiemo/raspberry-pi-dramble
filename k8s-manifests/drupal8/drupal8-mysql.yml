# PersistentVolumeClaim for Drupal 8 MySQL database.
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: drupal8-db-pvc
  namespace: drupal8
  labels:
    app: drupal8
  annotations:
    volume.beta.kubernetes.io/storage-class: "pidramble-nfs"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi

# MySQL Deployment.
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mysql
  namespace: drupal8
  labels:
    app: drupal8
spec:
  selector:
    matchLabels:
      app: drupal8
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drupal8
        tier: mysql
    spec:
      containers:
      - image: {{ mysql_container_image }}
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: drupal
        - name: MYSQL_USER
          value: drupal
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: drupal8-mysql-pass
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: drupal8-mysql-root-pass
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: drupal8-db-pvc

# MySQL Service.
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: drupal8
  labels:
    app: drupal8
spec:
  ports:
  - port: 3306
  selector:
    app: drupal8
    tier: mysql
  clusterIP: None
