---
# TODO: Change docker-registry.yml manifest to use env vars to point to cert
# and private key (do they also need to be mounted?). Might not need to do this
# if the certs are in the local store.

- name: Ensure requirements for python OpenSSL are met.
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - libffi-dev
    - libssl-dev

# SSL Cert setup for secure Docker registry.
- name: Ensure python OpenSSL dependencies are installed.
  pip:
    name: pyOpenSSL
    state: present

- name: Ensure directory exists for self-signed TLS certs.
  file:
    path: /mnt/nfs/certs
    state: directory
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

- name: Generate an OpenSSL private key.
  openssl_privatekey:
    path: /mnt/nfs/certs/registry-privkey.pem
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

- name: Generate an OpenSSL CSR.
  openssl_csr:
    path: /mnt/nfs/certs/registry-privkey.csr
    privatekey_path: /mnt/nfs/certs/registry-privkey.pem
    common_name: "{{ docker_registry_domain }}"
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

- name: Generate a Self Signed OpenSSL certificate.
  openssl_certificate:
    path: /mnt/nfs/certs/registry-fullchain.pem
    privatekey_path: /mnt/nfs/certs/registry-privkey.pem
    csr_path: /mnt/nfs/certs/registry-privkey.csr
    provider: selfsigned
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

# Make sure cert is in local store on each server.
- name: Ensure local cert directory exists.
  file:
    path: /usr/local/share/ca-certificates
    state: directory

- name: Copy cert into local directory.
  copy:
    src: /mnt/nfs/certs/registry-fullchain.pem
    dest: /usr/local/share/ca-certificates/registry-fullchain.crt
    remote_src: yes
  register: copy_registry_cert

- name: Ensure certs are updated.
  command: update-ca-certificates
  when: copy_registry_cert is changed

# Add a Kubernetes secret for Traefik Ingress TLS.
- name: Create necessary TLS secrets.
  command: kubectl create secret tls docker-registry-tls --key /mnt/nfs/certs/registry-privkey.pem --cert /mnt/nfs/certs/registry-fullchain.pem
  register: kubectl_secret_result
  changed_when: "'already exists' not in kubectl_secret_result.stderr"
  failed_when:
    - "'already exists' not in kubectl_secret_result.stderr"
    - "'created' not in kubectl_secret_result.stdout"
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

# Kubernetes manifest for Docker registry.
- name: Copy Kubernetes definition files to the cluster.
  template:
    src: "{{ item }}"
    dest: "~/{{ item | basename }}"
  with_fileglob: "files/manifests/docker-registry/*.yml"

- name: Apply Docker registry manifest to the cluster.
  command: kubectl apply -f ~/{{ item }}
  with_items:
    - docker-registry.yml
  register: kube_apply_result
  changed_when: "'created' in kube_apply_result.stdout"
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"
