---
- name: Copy Kubernetes definition files to the cluster.
  template:
    src: "{{ item }}"
    dest: "~/{{ item | basename }}"
  with_fileglob: "k8s-manifests/kube-system/*.yml"

- name: Apply Ingress-related manifests to the cluster.
  command: kubectl apply -f ~/{{ item }}
  with_items:
    - ingress-traefik.yml
    - ingress-traefik-rbac.yml
  register: kube_apply_result
  changed_when: "'created' in kube_apply_result.stdout"
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

- name: Ensure metrics-server directory exists.
  file:
    path: "~/metrics-server"
    state: directory

- name: Download the metrics-server project from GitHub.
  unarchive:
    src: https://github.com/kubernetes-incubator/metrics-server/archive/master.tar.gz
    dest: "~/metrics-server"
    remote_src: yes
    extra_opts: [ "--strip-components=1" ]
    creates: "~/metrics-server/README.md"
  register: metrics_server_download
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

- name: Overwrite metrics-server deployment manifest for ARM processor.
  copy:
    src: k8s-manifests/kube-system/metrics-server-deployment-arm.yaml
    dest: "~/metrics-server/deploy/1.8+/metrics-server-deployment.yaml"
  when: deploy_target == 'pi'
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"

- name: Apply metrics-server services to the cluster.
  command: kubectl create -f ~/metrics-server/deploy/1.8+/
  when: metrics_server_download is changed
  run_once: True
  delegate_to: "{{ groups.dramble[0] }}"
