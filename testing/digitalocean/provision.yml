---
- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ../../config.yml

  vars:
    droplets:
      - { name: "bal1.{{ site_url }}", group: "balancer" }
      - { name: "www1.{{ site_url }}", group: "webservers" }
      - { name: "www2.{{ site_url }}", group: "webservers" }
      - { name: "db1.{{ site_url }}", group: "database" }
      - { name: "db2.{{ site_url }}", group: "database" }

  tasks:
    - name: Provision DigitalOcean droplets.
      digital_ocean:
        state: "{{ item.state | default('present') }}"
        command: droplet
        id: "{{ item.name }}"
        name: "{{ item.name }}"
        api_token: "TOKEN_HERE" # Add your API token here.
        private_networking: yes
        size_id: "{{ item.size | default('1gb') }}"
        image_id: "{{ item.image | default('debian-8-x64') }}"
        region_id: "{{ item.region | default('nyc3') }}"
        # Jeff Geerling's public keys as of early 2016.
        ssh_key_ids: "{{ item.ssh_key | default('138954,1601164') }}"
      register: created_droplets
      with_items: droplets

    - name: Add DigitalOcean hosts to their respective inventory groups.
      add_host:
        name: "{{ item.1.droplet.ip_address }}"
        groups: "do,{{ droplets[item.0].group }},{{ item.1.droplet.name }}"
        # You can dynamically add inventory variables per-host.
        ansible_ssh_user: root
      when: item.1.droplet is defined
      with_indexed_items: created_droplets.results

- hosts: do
  remote_user: root

  tasks:
    - name: Wait for port 22 to become available.
      local_action: "wait_for port=22 host={{ inventory_hostname }}"
